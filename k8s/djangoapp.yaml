apiVersion: apps/v1
kind: Deployment
metadata:
  name: djangoapp-deployment
  labels:
    app: djangoapp
spec:
  replicas: 1
  # minReadySeconds: 200
  selector:
    matchLabels:
      app: djangoapp
  template:
    metadata:
      labels:
        app: djangoapp
    spec:
      serviceAccountName: django-shiny-sa
      initContainers:
      - image:  gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
        name: workload-identity-initcontainer
        command:
        - '/bin/bash'
        - '-c'
        - |
          curl -sS -H 'Metadata-Flavor: Google' 'http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token' --retry 30 --retry-connrefused --retry-max-time 60 --connect-timeout 3 --fail --retry-all-errors > /dev/null && exit 0 || echo 'Retry limit exceeded. Failed to wait for metadata server to be available. Check if the gke-metadata-server Pod in the kube-system namespace is healthy.' >&2; exit 1
      containers:
      - name: djangoapp
        image: northamerica-northeast1-docker.pkg.dev/phx-datadissemination/django-shiny/djangoapp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: secrets
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /health_check
            port: 8000
            httpHeaders:
            - name: Host
              value: shiny.phac.alpha.canada.ca
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: djangoapp-service
spec:
  selector:
    app: djangoapp
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
